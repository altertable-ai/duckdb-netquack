# name: test/sql/ipcalc.test
# description: test netquack extension ipcalc function
# group: [netquack]

require netquack

statement ok
CREATE OR REPLACE TABLE ips AS SELECT '127.0.0.1' AS ip UNION ALL SELECT '192.168.1.0/22';

query IIIIIIIII
SELECT * FROM ipcalc('127.0.0.1');
----
127.0.0.1	255.255.255.0	0.0.0.255	127.0.0.0/24	127.0.0.1	127.0.0.254	127.0.0.255	254	A, Loopback

query IIIIIIIII
SELECT * FROM ipcalc('127.0.0.1/32');
----
127.0.0.1	255.255.255.255	0.0.0.0	127.0.0.1	-	-	-	1	A, Loopback

query IIIIIIIII
SELECT * FROM ipcalc('192.168.1.0/22');
----
192.168.1.0	255.255.252.0	0.0.3.255	192.168.0.0/22	192.168.0.1	192.168.3.254	192.168.3.255	1022	C

query IIIIIIIII
SELECT * FROM ipcalc('192.168.1.1/24');
----
192.168.1.1	255.255.255.0	0.0.0.255	192.168.1.0/24	192.168.1.1	192.168.1.254	192.168.1.255	254	C

query IIIIIIIII
SELECT * FROM ipcalc('192.168.1.1/16');
----
192.168.1.1	255.255.0.0	0.0.255.255	192.168.0.0/16	192.168.0.1	192.168.255.254	192.168.255.255	65534	C

# TODO: There is a problem with this test for DuckDB CI. Need to investigate further.
# query II
# SELECT i.IP, ( SELECT hostsPerNet FROM ipcalc(i.IP) ) AS hostsPerNet FROM ips AS i;
# ----
# 127.0.0.1	254
# 192.168.1.0/22	1022
